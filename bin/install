#!/usr/bin/env bash
set -euo pipefail

# Funções auxiliares (se você tiver utils.bash, pode importar)
# source "$(dirname "$0")/../lib/utils.bash"

# Variáveis do plugin
GH_REPO="ggml-org/whisper.cpp"
VERSION="latest"

# Path de instalação fornecido pelo asdf/mise
INSTALL_PATH="${ASDF_INSTALL_PATH:-${1:-}}"
if [ -z "$INSTALL_PATH" ]; then
  echo ">>> ERRO: nenhum path de instalação fornecido"
  exit 1
fi

echo ">>> Instalando whisper.cpp (última versão) em $INSTALL_PATH"

# Cria diretórios
mkdir -p "$INSTALL_PATH/bin"
TMP_DIR=$(mktemp -d)
trap "rm -rf $TMP_DIR" EXIT

# Clona o repositório
echo ">>> Clonando $GH_REPO..."
git clone --depth 1 "https://github.com/$GH_REPO.git" "$TMP_DIR/src"
cd "$TMP_DIR/src"

# Detectar última versão (tag)
if [ "$VERSION" = "latest" ]; then
    VERSION=$(git describe --tags --abbrev=0 || echo "master")
    echo ">>> Última versão detectada: $VERSION"
fi
git checkout "$VERSION"

# Build estático
echo ">>> Compilando whisper.cpp (build estático)..."

mkdir -p build
cd build

cmake -S .. -B . -DCMAKE_BUILD_TYPE=Release \
      -DBUILD_SHARED_LIBS=OFF \
      -DBUILD_CLI=ON \
      -DBUILD_SERVER=ON \
      -DBUILD_BENCH=OFF \
      -DBUILD_QUANTIZE=OFF \
      -DBUILD_VAD=OFF

cmake --build . --config Release -j$(sysctl -n hw.ncpu)

# Copia o binário principal
echo ">>> Copiando whisper-cli como whisper..."

# Copia o binário principal
cp bin/whisper-cli "$INSTALL_PATH/bin/whisper-cli"
cp bin/whisper-server "$INSTALL_PATH/bin/whisper-server"

chmod +x "$INSTALL_PATH/bin/whisper-cli"

# Cria o wrapper vazio
cat > "$INSTALL_PATH/bin/whisper" << 'EOF'
#!/usr/bin/env bash
set -euo pipefail
WHISPER_CLI="$(dirname "$0")/whisper-cli"
MODEL_DIR="${HOME}/.local/share/mise/whisper-models"
mkdir -p "$MODEL_DIR"

download_model() {
    local model_name="$1"
    echo "Baixando modelo $model_name..."
    curl -L -o "${MODEL_DIR}/ggml-${model_name}.bin" \
        "https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-${model_name}.bin"
}

# Array para armazenar argumentos do whisper
ARGS=()

# Loop para processar parâmetros
while [[ $# -gt 0 ]]; do
    case "$1" in
        -m|--model)
            if [[ $# -lt 2 ]]; then
                echo "ERRO: '-m|--model' requer um argumento"
                exit 1
            fi
            MODEL="$2"
            MODEL_PATH="${MODEL_DIR}/ggml-${MODEL}.bin"
            if [[ ! -f "$MODEL_PATH" ]]; then
                download_model "$MODEL"
            else
                echo "Modelo $MODEL já existe. Usando $MODEL_PATH"
            fi
            ARGS+=("--model" "$MODEL_PATH")
            shift 2
            ;;
        *)
            ARGS+=("$1")
            shift
            ;;
    esac
done

# Executa o whisper original
if [[ ${#ARGS[@]} -eq 0 ]]; then
    exec "$WHISPER_CLI"
else
    exec "$WHISPER_CLI" "${ARGS[@]}"
fi
EOF

chmod +x "$INSTALL_PATH/bin/whisper"
